- hosts: launched
  connection: local
  gather_facts: False

  vars:
    ami: ami-2de00f4d
    keypair: malpem
    type: c4.4xlarge
    region: us-west-2
    queue: MalpemQueue
    set_dns: false

  tasks:
- name: Provision EC2 instance
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Launch instance
      ec2:
        keypair={{ keypair }}
        instance_type={{ type }}
        image={{ ami }}
        region={{ region }}
        wait=yes
      register: ec2

    - name: Add new instance to host group
      local_action: add_host hostname={{ item.public_dns_name }}
                    groupname=launched
      with_items: ec2.instances

    - name: Ensure DNS entry exists
      route53: command=create overwrite=yes
               record=ci.{{ dns_zone }} type=A zone={{ dns_zone }}
               value={{ item.public_ip }}
      with_items: ec2.instances
      when: set_dns

    - name: Wait for SSH to come up
      local_action: wait_for host={{ item.public_dns_name }}
                    port=22 delay=60 timeout=320 state=started
      with_items: ec2.instances

#next parts unsuccessful in testing
      - name: Get key from SQS and image from S3
      	shell: echo "Fetching messages from SQS queue: ${queue}..."
      	       result=$( \
        	      aws sqs receive-message \
            		  --queue-url ${queue} \
           		  --region ${region} \
			  --wait-time-seconds 20 \
       			  --query Messages[0].[Body,ReceiptHandle] \
			  | sed -e 's/^"\(.*\)"$/\1/'\
   			  )			     
	       key=$(echo ${result} | sed -e 's/^.*\\"key\\":\s*\\"\([^\\]*\)\\".*$/\1/')
               echo "Key: ${key}."
	       echo "Copying ${key} from S3 bucket ${bucket}..."
	       aws s3 cp s3://${bucket}/${key} /tmp
	register: newfile
	 
- name: Process image
  host: hostname
  command: bin/malpem-proot -i {{ newfile.stdout }} /tmp -o outputDir 

- name: Put report in output bucket
  s3: bucket: malpemoutputs 
  object: outputDir 
  src: {{ item }} 
  mode: put

- name: Delete SQS message
      shell:
            echo "Deleting message..."
            aws sqs delete-message \
                --queue-url ${queue} \
                --region ${region} \
                --receipt-handle "${receipt_handle}"

- name: Terminate EC2 instance
  hosts: localhost
  connection: local
  ec2: state: 'absent'
  instance_ids: "{{ ec2.instance_ids }}"
